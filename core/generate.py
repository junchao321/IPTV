from utils import FileOps
from typing import List, Dict

class ResultGenerator:
    """结果文件生成器"""
    def __init__(self, config: configparser.ConfigParser):
        self.config = config
        self.file_ops = FileOps()
    
    def _generate_m3u_header(self) -> str:
        """生成M3U文件头部"""
        return (
            '#EXTM3U\n'
            '#CODECS=MPEG-4,AAC\n'
            '#PLAYLIST GENERATED BY IPTV AUTO-UPDATER\n'
        )
    
    def generate_m3u(self, channels: List[Dict], output_file: str):
        """生成标准M3U文件"""
        content = self._generate_m3u_header()
        for channel in channels:
            content += (
                f'#EXTINF:-1,tvg-id="{channel["id"]}",tvg-name="{channel["name"]}",tvg-logo="{channel["icon"]}",group-title="{channel["group"]}\n'
                f'{channel["url"]}\n'
            )
        self.file_ops.write_text_file(output_file, content)
    
    def generate_txt_report(self, channels: List[Dict], output_file: str):
        """生成结构化TXT报告"""
        header = "频道ID|频道名称|分组|图标|URL|延迟(ms)\n"
        content = header + "\n".join([
            f"{c['id']}|{c['name']}|{c['group']}|{c['icon']}|{c['url']}|{c['latency']}"
            for c in channels
        ])
        self.file_ops.write_text_file(output_file, content)
